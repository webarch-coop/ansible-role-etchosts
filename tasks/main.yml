# Copyright 2023 Chris Croome
#
# This file is part of the Webarchitects /etc/hosts Ansible role.
#
# The Webarchitects /etc/hosts Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects /etc/hosts Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects /etc/hosts Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Manage /etc/hosts
  block:

    - name: Include tasks to validate etchosts_ variables
      ansible.builtin.include_tasks: validate.yml
      when:
        - etchosts_validate is defined
        - etchosts_validate | bool

    - name: Include tasks to check variables
      ansible.builtin.include_tasks: checks.yml

    - name: Edit /etc/hosts
      ansible.builtin.include_tasks: edit.yml
      loop: "{{ etchosts_file }}"
      loop_control:
        extended: true
        loop_var: etchosts_entry
        label: "{{ etchosts_entry.ip }}"
      when: >-
        ( ( etchosts_template is defined ) and
        ( not etchosts_template | bool ) ) and
        ( ( etchosts_entry not in etchosts_existing ) and
        ( ( etchosts_entry.state is not defined ) or
        ( etchosts_entry.state == "present" ) ) and
        ( ( etchosts_entry.hostname is defined ) and
        ( etchosts_entry.hostname != [] ) ) ) or
        ( ( etchosts_entry.state is defined ) and
        ( etchosts_entry.state == "absent" ) and
        ( etchosts_entry.ip in etchosts_existing_ips ) )

    - name: Template /etc/hosts
      ansible.builtin.template:
        src: hosts.j2
        dest: /etc/hosts
        mode: "0644"
        owner: root
        group: root
      when:
        - etchosts_template is defined
        - etchosts_template | bool

    - name: Setting the hostname in containers can fail
      block:

        - name: Hostname set
          ansible.builtin.hostname:
            name: "{{ etchosts_hostname }}"
            use: "{{ etchosts_hostname_strategy }}"
          register: etchosts_set_hostname

      rescue:

        - name: Debug failure message
          ansible.builtin.debug:
            var: etchosts_set_hostname.msg
          when: etchosts_set_hostname.msg is defined

        - name: Fail due to unknown cause of failure
          ansible.builtin.fail:
          when:
            - etchosts_set_hostname.msg is not ansible.builtin.regex(etchosts_static_hostname_error_regex)
            - etchosts_set_hostname.msg is not ansible.builtin.regex(etchosts_connect_to_bus_error_regex)

        - name: Use lineinfile to set the /etc/hostname
          ansible.builtin.lineinfile:
            create: true
            line: "{{ etchosts_hostname }}"
            mode: "0644"
            path: /etc/hostname
            regex: '^[0-9a-z-]{1,60}[.].*'
            state: present
            unsafe_writes: "{{ etchosts_unsafe_writes }}"
          when: >-
            ( etchosts_set_hostname.msg is ansible.builtin.regex(etchosts_static_hostname_error_regex) ) or
            ( etchosts_set_hostname.msg is ansible.builtin.regex(etchosts_connect_to_bus_error_regex) )

        - name: Reboot due to Failed to connect to bus error
          ansible.builtin.command: reboot -h now
          changed_when: true
          when: etchosts_set_hostname.msg is ansible.builtin.regex(etchosts_connect_to_bus_error_regex)

        - name: Wait for the server to come up
          ansible.builtin.wait_for:
            path: /etc/hostname
            search_regex: "^{{ etchosts_hostname }}$"
            delay: 30
          when: etchosts_set_hostname.msg is ansible.builtin.regex(etchosts_connect_to_bus_error_regex)

      when: etchosts_hostname | length > 0

    - name: Mailname set
      ansible.builtin.lineinfile:
        create: true
        line: "{{ etchosts_mailname }}"
        mode: "0644"
        path: /etc/mailname
        regex: '^[0-9a-z-]{1,60}[.].*'
        state: present
        unsafe_writes: "{{ etchosts_unsafe_writes }}"
      when: etchosts_mailname | length > 0

  when: etchosts | bool
  tags:
    - etchosts
...
